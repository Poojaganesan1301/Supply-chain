-- Read the data from all tables.
select * from customer; -- 91 rows
select * from orderitem; -- 2155 rows
select * from orders; -- 830 rows
select * from product; -- 78 rows
select * from supplier; -- 29 rows

-- Find the country-wise count of customers.
select count(id) as count,country from customer group by country order by count(id) desc; -- USA,Germany,France are the top 3 highest country wise customer count.

-- 3.	Display the products that are not discontinued.
select * from product where IsDiscontinued = 1; -- 8 rows

-- 4.	Display the list of companies along with the product name that they are supplying.
select ProductName,CompanyName from supplier s join product p on s.id=p.SupplierId; -- 78 rows

-- 5.	Display customer information about who stays in 'Mexico'
select * from customer where country='Mexico'; -- 5 rows

-- 6.	Display the costliest item that is ordered by the customer.
select max(p.UnitPrice) as costliest_item,ProductName from customer c join orders o on c.id=o.CustomerId 
join orderitem oi on o.id=oi.OrderId join product p on oi.ProductId=p.id
group by ProductName
order by max(p.UnitPrice) desc
limit 1;

-- 7.	Display supplier ID who owns the highest number of products.
select count(P.id) no_of_products,SupplierId from product p join orderitem oi on p.id=oi.ProductId
group by SupplierId
order by count(p.id) desc
limit 1; -- supplier id 12 has 179 products.

-- 8.	Display month-wise and year-wise counts of the orders placed.
select count(Id),month(orderdate),year(orderdate) from orders
group by month(OrderDate),year(OrderDate)
order by year(OrderDate); -- 23 rows

-- 9.	Which country has the maximum number of suppliers?
select count(supplierId),country from supplier s join product p on s.id=p.SupplierId
group by country
order by count(supplierId) desc
limit 0,3; -- USA has highest number of suppliers.

-- 10.	Which customers did not place any orders?
select p.id from product p where not exists(select oi.productId from orderitem oi where p.id=oi.productId);

-- section -B 
-- 1. Arrange the product ID, and product name based on high demand by the customer.
select ProductId,ProductName,sum(Quantity) high_demand from product p join orderitem oi on p.id=oi.ProductId
group by ProductId,ProductName
order by sum(Quantity) desc ; -- productid 60 and productname camembert pierrot is high demand.

-- 2.	Display the number of orders delivered every year.
select sum(Quantity) no_of_orders,year(orderdate) from orders o join orderitem oi on o.id=oi.orderid
group by year(OrderDate);

-- 3.	Calculate year-wise total revenue.
select year(orderdate) year,round(sum(totalamount),0) total_revenue from orders 
group by year(OrderDate)
order by total_revenue desc;

-- 4.	Display the customer details whose order amount is maximum including his past orders.
select max(totalamount) amount,c.id from customer c left join orders o on c.id=o.CustomerId
group by c.id
order by amount desc;

select max(totalamount) amount,customerid from customer c  join orders o on c.id=o.CustomerId
group by c.id
order by amount desc;

-- 5.	Display the total amount ordered by each customer from high to low.
select sum(totalamount) amount,customerid from customer c  left join orders o on c.id=o.CustomerId
group by customerid
order by amount desc;

-- The sales and marketing department of this company wants to find out how frequently customers do business with them. 
-- 6.	Approach - List the current and previous order dates for each customer.

select customerId,OrderDate,lag(OrderDate)over(partition by CustomerId order by OrderDate) as previos_orders from customer c left join orders o on c.id=o.CustomerId;

-- 7.	Find out the top 3 suppliers in terms of revenue generated by their products.
select SupplierId,CompanyName,sum(TotalAmount) revenue 
from orders o join orderitem oi on o.id=oi.OrderId 
join product p on oi.ProductId=p.id 
join supplier s on p.SupplierId=s.id
group by SupplierId,CompanyName
order by revenue desc
limit 0,3;

-- 8.	Display the latest order date (should not be the same as the first order date) of all the customers with customer details.
select distinct c.id,firstname,lastname,city,country,phone,
first_value(OrderDate)over(partition by c.Id order by OrderDate desc) latest_order_date 
from customer c left join orders o on c.id=o.CustomerId
where OrderDate is not null;

-- 9.	Display the product name and supplier name for each order
select OrderId,ProductName,CompanyName from supplier s join product p on s.id=p.SupplierId join orderitem oi on p.id=oi.ProductId
order by OrderId;

-- Section C --> Business Analysis 	
-- 1.	Fetch the records to display the customer details who ordered more than 10 products in a single order
select c.id,firstname,lastname,city,country,phone,OrderId,count(ProductId) as products from customer c 
join orders o on c.id=o.CustomerId 
join orderitem oi on o.id=oi.OrderId
group by OrderId
having count(productId) >10
order by OrderId;

-- 2.	Display all the product details with the ordered quantity size as 1.
select ProductId,ProductName,quantity from product p join orderitem oi on p.id=oi.ProductId
where quantity = 1
order by ProductId;

-- 3.	Display the companies that supply products whose cost is above 100.
select CompanyName,ProductName,UnitPrice from supplier s join product p on s.id=p.SupplierId
where UnitPrice > 100;

-- 4.	Create a combined list to display customers and supplier lists as per the below format.
select Type, ContactName, City, Country, Phone
from (
    select 'Customer' as Type, firstname as ContactName, City, Country, Phone from Customer
    union all
    select 'Supplier' as Type, ContactName, City, Country, Phone from Supplier
) as CombinedList
order by Type, ContactName;

-- 5.	Display the customer list who belongs to the same city and country arranged in country wise.
select Id,FirstName,Country from customer order by country;

-- Section D --> Challenge 	
-- 1.	The company sells the product at different discounted rates. 
-- Refer actual product price in the product table and the selling price in the order item table.
 -- Write a query to find out the total amount saved in each order then display the orders from highest to lowest amount saved.
 
 select oi.OrderId,sum((p.UnitPrice-oi.UnitPrice)*oi.Quantity) as total_amount from product p join orderitem oi on p.id=oi.ProductId
 group by oi.OrderId
 order by total_amount desc;
 
 -- 2.	Mr. Kavin wants to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: 
-- a. List a few products that he should choose based on demand.
-- b. Who will be the competitors for him for the products suggested in the above questions?
-- a
select ProductId,ProductName,sum(Quantity) high_demand from product p 
join orderitem oi on p.id=oi.ProductId
group by ProductId,ProductName
order by sum(Quantity) desc 
limit 5;
-- b
select p.ProductName,s.CompanyName,sum(oi.Quantity) as total_quantity from orderitem oi 
join product p on oi.ProductId = p.id
join supplier s on p.SupplierId=s.id
group by p.ProductName,s.CompanyName
order by total_quantity desc
limit 5;

-- 3.	Create a combined list to display customers' and suppliers' details considering the following criteria 
-- ●	Both customer and supplier belong to the same country
-- ●	Customer who does not have a supplier in their country
-- ●	A supplier who does not have customers in their country

select c.FirstName,c.Country,s.CompanyName,s.Country from customer c join orders o on c.id=o.customerid 
join orderitem oi on o.Id=oi.OrderId join product p on oi.ProductId=p.Id
join supplier s on p.SupplierId=s.id
where c.Country=s.Country;

select distinct country from supplier where country not in (select country from customer);

select distinct country from customer where country not in (select country from supplier);

-- 4.	Every supplier supplies specific products to the customers. 
-- Create a view of suppliers and total sales made by their products and 
-- write a query on this view to find out the top 2 suppliers
-- (using Windows function RANK() in each country by total sales done by the products.

create view v2 as 
select s.CompanyName,p.ProductName,p.UnitPrice,s.Country from supplier s join product p on s.Id=p.SupplierId;

select productname,total_sales,rank()over(order by total_sales desc) rnk from
(select companyname,productname,sum(unitprice)over(partition by productname,companyname) total_sales from v2) t
limit 0,2;

-- 5.	Find out for which products, the UK is dependent on other countries for the supply. 
-- List the countries which are supplying these products in the same list.

select c.FirstName,c.Country,p.productname,s.CompanyName,s.Country from customer c join orders o on c.id=o.customerid 
join orderitem oi on o.Id=oi.OrderId join product p on oi.ProductId=p.Id
join supplier s on p.SupplierId=s.id
where c.country='UK' and s.country <> 'UK';



